
[save_variables]
#filename: ~/klipper/config/variables.cfg
#filename: ~/klipper/variables.cfg
filename: ~/printer_data/config/variables.cfg

[gcode_macro var]
variable_temp: 150					#用于存储默认升温温度
variable_buffer_switch: 0           #缓冲器开关

variable_tunnel: 4                 #用于存储当前的通道数量，从1开始,mm

#运行电流和待机电流
variable_runcurrent: 0.8           #送料时的电流
variable_printcurrent: 0.55        #运行时的电流
variable_awaitcurrent: 0.05        #待机时的电流

#预进料的距离和速度
variable_readyin:120				#预进料的距离
variable_readyinspeed:600			#预进料的速度

#进料的三个阶段
variable_furcation_to_cbs: 100      #耗材从cbs到分叉位置的距离

#按物理远近,从远程挤出机开始分别是 furcation_to_cbs ==》bs0(分叉口进出料长度) ==》s0==》input==》inputoks ==》purge
#step0(备份进料程序)
variable_bs0: 100                 	#耗材从分叉位置到入料循环检测位置的距离（第一段阶段进料，将耗材以最快速度送至检测传感器附近）
variable_bspeed0: 2500              #设定速度，越快越好

#step1
variable_s0: 300                  #耗材从分叉位置到入料循环检测位置的距离（第一段阶段进料，将耗材以最快速度送至检测传感器附近）
                                   #注意！！！此处的s0应该是迅速把料送到无限接近检测开关但仍 “不触发“ 检测开关的位置，估值，距离检测开关约30mm左右较为适宜
variable_speed0: 2500              #设定速度，越快越好

#step2
#耗材完成step1后，耗材会以一个固定的步长逐渐接近检测开关，直到开关触发
variable_inputs:10					#进每次进料的步长
variable_inputspeed:600			    #设定速度，不宜太快
#step3
#耗材已经到传感器检测位置，之后就是将耗材挤出到喷嘴处
variable_inputoks:25		        #对于没有拉屎位置的2.4而言，这段距离最好是耗材从检测位置到喷嘴的距离
variable_purge:10                   #对于有拉屎位置的三叉戟而言，这段距离可以直接作为擦除塔擦除量的替代
variable_extremely_purge:200        #断料发生在cas和inout之间时，耗材无法被远程挤出机抽出，通过大量的拉屎来替代回抽，以修复bug
variable_inputokspeed:400			#设定速度，不宜过快

#退料的两个阶段
#step1
variable_fouts:-100					#退料——耗材从喷头退出到分叉位置的距离130
variable_foutspeed:2000				#退料——耗材从喷头退出的速度

#step2
variable_outs:-200					#退料——耗材从挤出机退出到远程五通的距离130
variable_outspeed:2500				#退料——耗材从喷头退出的速度

variable_inout_used: 0                   #option for hotend micro switch used or not. 
variable_buffer_used: 0                   #option for hotend micro switch used or not. 
#Do not change below variable, it's not for customization!!!
variable_state:0					#用于存储打印机的状态（0是未处于打印任务阶段，1是处于打印任务阶段）	
variable_purgeline:0                #开始打印时的擦除线,仅针对2.4
variable_runout:0					#用于记录当前的状态以判定是否需要触发续料程序
variable_switchtime:0	            #用于记录当前的换色次数
variable_failuretime:0	            #用于记录当前的换色失败次数
variable_retrytime:0	            #用于记录当前的失败后自行恢复次数
variable_motor:0
#variable_switchcolor_pre: 1

variable_jinliao_retries: 0
variable_jinliao_steps: 0
variable_jinliao_number_of_steps: 3  # 您可以根据需要调整这个值
##### ↑↑↑ mz_out_color.cfg 变量↑↑↑ #####
gcode:

###以下的宏是为了能够让打印机切换耗材以后同时能读到切换耗材位置的温度并给喷头设置该温度,需要根据实际通道数量更新
##以下各通道的温度数值可以手动更新,但推荐在Orca里设定好,每次打印开始都会直接读取并覆盖这里的默认数值
#切片软件起始代码里需加入以下内容方便传参数,有几个加几个,默认四通道
# Set_temperature EXTRUDER={nozzle_temperature[0]} TOOL=0
# Set_temperature EXTRUDER={nozzle_temperature[1]} TOOL=1
# Set_temperature EXTRUDER={nozzle_temperature[2]} TOOL=2
# Set_temperature EXTRUDER={nozzle_temperature[3]} TOOL=3
# Set_temperature EXTRUDER={nozzle_temperature[4]} TOOL=4
# Set_temperature EXTRUDER={nozzle_temperature[5]} TOOL=5
# Set_temperature EXTRUDER={nozzle_temperature[6]} TOOL=6
# Set_temperature EXTRUDER={nozzle_temperature[7]} TOOL=7
# Set_temperature EXTRUDER={nozzle_temperature[8]} TOOL=8
# Set_temperature EXTRUDER={nozzle_temperature[9]} TOOL=9
# Set_temperature TZ=0 TO=0
[gcode_macro Set_temperature]                
description:温度设定代码,每次打印开始时
  从Orca里直接获取各通道设定的打印温度
  Usage: Set_temperature EXTRUDER=[temperature] TOOL=[Tool]
   Set_temperature EXTRUDER=200 TOOL=0
gcode:
    #从silcer里读取并记录的温度数组 
    {% set TP = params.EXTRUDER|default(202)|int %}
    {% set nx = params.TOOL|default(2)|int %}
    # {% set T_zero = params.TZ|default(0)|int %}
    # {% set T_one = params.TO|default(0)|int %}
    _tt NU={nx} ACT{nx}={TP}
    
    # {% if T_zero == 0 and T_one == 1 %} 
    #     RESPOND TYPE=echo MSG="T0辅助加温至归零所需温度"
    #     M104 S150 T0
    # {% endif %}

    
[gcode_macro _tt]
description: 通过来自Set_temperature的赋值,数组allcolortemperature[]记录了所有通道的预设温度
             该宏自动根据当前通道设定喷头的打印温度
gcode:
    {% set state = printer['gcode_macro var']['state'] %}	
    {% set num = params.NU|default(0)|int %} 
    
    {% set allcolortemperature = [params.ACT0|default(200), params.ACT1|default(200), 
    params.ACT2|default(202), params.ACT3|default(203), params.ACT4|default(204), params.ACT5|default(205), 
    params.ACT6|default(206), params.ACT7|default(207), params.ACT8|default(208), params.ACT9|default(209)] %}

    # {% if state == 1 %}  
    #     {% if printer.toolhead.extruder == 'extruder' %}
    #         M109 S{allcolortemperature[num]} T0
    #     {% elif (printer.toolhead.extruder) == 'extruder1' %}
    #         M109 S{allcolortemperature[num]} T1
    #     {% endif %}
    # {% else %}  #非打印状态的温度汇报
       #{ action_respond_info("设定%d号耗材打印温度是%s度" % (num, allcolortemperature[num]) ) }
    SAVE_VARIABLE VARIABLE=tm{num} VALUE={allcolortemperature[num]}
    # {% endif %}

[gcode_macro _filament_continue_set]
description: 耗材接替顺序，如不特别设置，默认不切换
            _filament_continue_set FCS{'old tunnel'}={'instead tunnel'}
gcode:
    {% set num = params.NU|default(0)|int %} 
    {% set fcons = [params.FCS0|default(2), params.FCS1|default(6), 
    params.FCS2|default(2), params.FCS3|default(3), params.FCS4|default(4), params.FCS5|default(5), 
    params.FCS6|default(6), params.FCS7|default(7), params.FCS8|default(8), params.FCS9|default(9)] %}

    SAVE_VARIABLE VARIABLE=continue{num} VALUE={fcons[num]}

 